run-name: ${{ github.actor }} ${{ github.event_name }} for ${{ github.ref }} id ${{ github.run_id }}
name: Code Audit and Tests
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, reopened, synchronize]
jobs:
  code-audit:
    environment: Test_Environment
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install poetry
      run: |
        python -m pip install poetry==1.4.2
    - name: Configure poetry
      run: |
        python -m poetry config virtualenvs.in-project true
    - name: Install dependencies
      run: |
        poetry install --with "code_audit"

    - name: Cache dependencies and Python
      uses: actions/cache@v2
      with:
        path: |
          ~/.cache/pypoetry
          ~/.cache/pip
          /usr/local/bin/python
        key: ${{ runner.os }}-deps-python-${{ hashFiles('**/poetry.lock') }}
     
  test-app:
    needs: code-audit
    environment: Test_Environment
    runs-on: ubuntu-latest

  
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache dependencies and Python
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pypoetry
            ~/.cache/pip
            /usr/local/bin/python
          key: ${{ runner.os }}-deps-python-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-deps-python-
            ${{ runner.os }}-

      - name: Run basic app tests which do not require anything running.
        if: always()
        run: |
          poetry run pytest ./tests/test_app
