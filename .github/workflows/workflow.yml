run-name: ${{ github.actor }} ${{ github.event_name }} for ${{ github.ref }} id ${{ github.run_id }}
name: Code Audit and Tests
on:
  pull_request:
    types: [opened, reopened, synchronize]
jobs:
  code-audit:
    environment: Test_Environment
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install poetry
      run: |
        python -m pip install poetry==1.4.2

    - name: Configure poetry
      run: |
        python -m poetry config virtualenvs.in-project true

    - name: Install dependencies
      run: |
        poetry install --with "code_audit"

    - name: Cache the virtualenv
      uses: actions/cache@v2
      with:
        path: ./.venv
        key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}

  test-app:
    needs: code-audit
    environment: Test_Environment
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Restore the virtualenv cache
        uses: actions/cache@v2
        with:
          path: ./.venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-venv-
            ${{ runner.os }}-

      - name: Install poetry
        run: |
          python -m pip install poetry==1.4.2

      - name: Run basic app tests which do not require anything running.
        if: always()
        run: |
          poetry run pytest ./tests/test_app

  test-neo4j:
    needs: code-audit
    environment: Test_Environment
    runs-on: ubuntu-latest

    services:
      neo4j:
        image: neo4j:latest
        ports:
          - 7474:7474
          - 7687:7687
        env:       
          NEO4J_AUTH: ${{ secrets.NEO4J_USERNAME }}/${{ secrets.NEO4J_PASSWORD }}
        command: neo4j

    strategy:
      matrix:
        python-version: ["3.9"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Restore the virtualenv cache
        uses: actions/cache@v2
        with:
          path: ./.venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-venv-
            ${{ runner.os }}-

      - name: Install poetry
        run: |
          python -m pip install poetry==1.4.2

      - name: Set environment variables
        env:
          NEO4J_USERNAME: ${{ secrets.NEO4J_USERNAME }}
          NEO4J_PASSWORD: ${{ secrets.NEO4J_PASSWORD }}
          NEO4J_URI: ${{ secrets.NEO4J_URI }}
        run: |
          echo "NEO4J_USERNAME=${NEO4J_USERNAME}" >> .env
          echo "NEO4J_PASSWORD=${NEO4J_PASSWORD}" >> .env
          echo "NEO4J_URI=${NEO4J_URI}" >> .env

      - name: Run tests on neo4j database
        if: always()
        run: |
          poetry run pytest ./tests/test_neo4j
