name: Code Audit and Tests
on:
  pull_request:
    types: [opened, reopened, synchronize]
jobs:
  code-audit:
    environment: Test_Environment
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.9"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache venv directory
      uses: actions/cache@v2
      with:
        path: venv
        key: venv-${{ hashFiles('poetry.lock') }}
        restore-keys: |
          venv-

    - name: Install dependencies
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install poetry==1.4.2
        poetry install -v --with "code_audit"
     
  test-app:
    needs: code-audit
    environment: Test_Environment
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Restore venv directory from cache
        uses: actions/cache@v2
        with:
          path: venv
          key: venv-${{ hashFiles('poetry.lock') }}
          restore-keys: |

      - name: Run tests
        run: |
          source venv/bin/activate
          poetry run pytest ./tests/test_app

  test-neo4j:
    needs: code-audit
    environment: Test_Environment
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ["3.9"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set environment variables
        env:
          NEO4J_USERNAME: neo4j
          NEO4J_PASSWORD: ${{ secrets.NEO4J_PASSWORD }}
          NEO4J_URI: ${{ secrets.NEO4J_URI }}
        run: |
          echo "NEO4J_USERNAME=neo4j" >> .env
          echo "NEO4J_PASSWORD=${NEO4J_PASSWORD}" >> .env
          echo "NEO4J_URI=${NEO4J_URI}" >> .env

      - name: Start Neo4j service
        run: |
          source venv/bin/activate
          docker-compose -f docker-compose.dev.yml up --detach graph

      - name: Run tests on neo4j database
        if: always()
        run: |
          source venv/bin/activate
          poetry run pytest ./tests/test_neo4j

